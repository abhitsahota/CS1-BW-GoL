{"version":3,"sources":["Components/About.js","Components/Rules.js","Components/Grid.js","Components/Viz.js","App.js","index.js"],"names":["About","className","Rules","operations","Grid","useState","generation","setGeneration","generationRef","useRef","current","clearGrid","arr","Array","i","length","fill","grid","setGrid","running","setRunning","runningRef","speed","setSpeed","speedRef","runSim","useCallback","g","produce","gridCopy","k","neighbors","forEach","x","y","newI","newK","newGen","setTimeout","onClick","j","Math","floor","random","randomGrid","for","name","id","value","onChange","e","target","console","log","style","display","gridTemplateColumns","map","row","col","key","newGrid","changeHandler","width","height","backgroundColor","border","Viz","App","Container","Row","Col","sm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9672b388.chunk.js","sourcesContent":["import React from 'react';\n\nfunction About() {\n    return (\n      <div className=\"About\">\n        <h2>About</h2>\n      </div>\n    )\n}\n\nexport default About;\n","import React from 'react';\n\nfunction Rules() {\n\n\n    return (\n      <div className=\"Rules\">\n        <h2>Rules</h2>\n        <br />\n        <p>In the Game of Life, the rules examine a cell's neighbours to determine the outcome of its generation. </p>\n        <ul>\n          <li>If the cell is alive and has 2 or 3 neighbors, then it remains alive. Else it dies.</li>\n          <li>If the cell is dead and has exactly 3 neighbors, then it comes to life. Else if remains dead.</li>\n        </ul>\n        <br />\n        <p>Note: The cells just outside of the grid are assumed to be dead. </p>\n        <br />\n      </div>\n    )\n}\n\nexport default Rules;\n","import React, { useState, useCallback, useRef } from \"react\";\nimport  produce from 'immer'\n\nconst numRows = 25\nconst numCols = 25\n\nconst operations = [\n  [0, 1],\n  [0, -1],\n  [1, -1],\n  [-1, 1],\n  [1, 1],\n  [-1, -1],\n  [1, 0],\n  [-1, 0]\n];\n\n\nfunction Grid() {\n\n  const [generation, setGeneration] = useState(0)\n  const generationRef = useRef(generation)\n  generationRef.current = generation\n\n  // Sets the state for the grid\n\n  const clearGrid = () => {\n    let arr = new Array(numCols);\n    for (let i = 0; i < arr.length; i++) {\n      arr[i] = new Array(numRows).fill(0)\n    }\n    setGeneration(0)\n    return arr\n  }\n\n  const [grid, setGrid] = useState(() => {\n    return clearGrid()\n  })\n\n\n\n  // Check if the sim is running\n  const [running, setRunning] = useState(false)\n\n  const runningRef = useRef(running)\n  runningRef.current = running\n\n  const [speed, setSpeed] = useState(1000)\n  const speedRef = useRef(speed)\n  speedRef.current = speed\n\n\n  const runSim = useCallback(() => {\n    if (!runningRef.current) {\n      return\n    }\n    \n    setGrid((g) => {\n      return produce(g, gridCopy => {\n        for (let i = 0; i < numRows; i++) {\n          for (let k = 0; k < numCols; k++) {\n            let neighbors = 0;\n            operations.forEach(([x, y]) => {\n              const newI = i + x;\n              const newK = k + y;\n              if (newI >= 0 && newI < numRows && newK >= 0 && newK < numCols) {\n                neighbors += g[newI][newK];\n              }\n            });\n              let newGen = generationRef.current + 1\n              setGeneration(newGen)\n\n            if (neighbors < 2 || neighbors > 3) {\n              gridCopy[i][k] = 0;\n            } else if (g[i][k] === 0 && neighbors === 3) {\n              gridCopy[i][k] = 1;\n            }\n          }\n        }\n      });\n    });\n\n    setTimeout(runSim, speedRef.current)\n  }, [])\n\n  const sim = () => {\n    setGrid((g) => {\n      return produce(g, gridCopy => {\n        for (let i = 0; i < numRows; i++) {\n          for (let k = 0; k < numCols; k++) {\n            let neighbors = 0;\n            operations.forEach(([x, y]) => {\n              const newI = i + x;\n              const newK = k + y;\n              if (newI >= 0 && newI < numRows && newK >= 0 && newK < numCols) {\n                neighbors += g[newI][newK];\n              }\n            });\n              let newGen = generationRef.current + 1\n              setGeneration(newGen)\n\n            if (neighbors < 2 || neighbors > 3) {\n              gridCopy[i][k] = 0;\n            } else if (g[i][k] === 0 && neighbors === 3) {\n              gridCopy[i][k] = 1;\n            }\n          }\n        }\n      });\n    });\n  }\n  \n  const randomGrid = () => {\n    let arr = new Array(numCols);\n    for (let i = 0; i < arr.length; i++) {\n      arr[i] = new Array(numRows).fill(0)\n      for (let j = 0; j < numCols; j++) {\n        arr[i][j] = Math.floor(Math.random() * 2)\n      }\n    }\n    setGeneration(0)\n    return arr\n  }\n\n  const changeHandler = (i, j) => {\n    const newGrid = produce(grid, gridCopy => {\n      gridCopy[i][j] = grid[i][j] ? 0 : 1\n    })\n    setGrid(newGrid)\n  }\n\n  return (\n    <>\n    <button \n      onClick={() => {\n        setRunning(!running)\n        if (!running) {\n          runningRef.current = true\n          runSim()\n        }}\n      }>\n      {running ? 'stop' : 'start'}\n    </button>\n    <button \n      onClick={() => sim()}\n      >\n      Step\n    </button>\n    <button\n      onClick={() => setGrid(clearGrid())}>\n      Clear\n    </button>\n    {running ? \"\" : (\n      <button\n      onClick={() => setGrid(randomGrid())}\n      >\n      random\n      </button>\n    )}\n    <label for=\"speed\">Sim Speed</label>\n    <select name=\"speed\" id=\"speed\" value={speedRef}\n      onChange={(e) => {\n        setSpeed(e.target.value)\n        speedRef.current = speed\n        console.log(speed)\n      }\n    }>\n      <option value={speedRef}>N/A</option>\n      <option value=\"1000\" >1x</option>\n      <option value=\"250\">2x</option>\n      <option value=\"125\">4x</option>\n      <option value=\"50\">10x</option>\n    </select>\n    <br />\n    <p>Generation: {generationRef.current} </p>\n    <br />\n\n    <div className=\"Grid\"\n      style={{\n        display: 'grid',\n        gridTemplateColumns: `repeat(${numCols}, 20px)`\n      }} >\n      {grid.map((row, i) => \n        row.map((col, j) => \n          <div key={`${i}${j}`} \n          onClick={() => changeHandler(i, j)}\n          style={{\n            width: 20, \n            height: 20,\n            backgroundColor: grid[i][j] ? 'black' : 'white',\n            border: 'solid 1px black'\n          }} />\n      ))}\n    </div>\n    </>\n  )\n}\n\nexport default Grid;","import React from 'react'\n\nimport Grid from './Grid'\n\nfunction Viz(){\n\n    return (\n        <div>\n            <h2>Simulation</h2>\n            <Grid />\n        </div>\n    )\n}\nexport default Viz","import React from 'react';\nimport './App.css';\n\n// Layout UI components\nimport { Container, Row, Col } from 'react-bootstrap'\n\n// Page components\nimport About from './Components/About'\nimport Rules from './Components/Rules'\nimport Viz from './Components/Viz';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Abhit's Conway's Game of Life</h1>\n\n      <Container>\n        <Row>\n          <Col sm={8}><Viz /></Col>\n          <Col sm={4}><Rules /></Col>\n        </Row>\n        <Row>\n        <Col sm={12}><About /></Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}